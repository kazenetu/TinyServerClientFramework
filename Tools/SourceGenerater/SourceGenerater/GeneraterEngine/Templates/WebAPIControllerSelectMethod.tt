<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using DataTransferObjects.Request.<#= BaseName #>;
using DataTransferObjects.Response.<#= BaseName #>;
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using WebAPI.Transactions.<#= BaseName #>;
using WebAPIFramework.BaseClasses;
using WebAPIFramework.Interfaces;

namespace WebAPI.Controllers.<#= WebAPIVersion.ToUpper() #>.<#= BaseName #>
{
  public partial class <#= BaseName #>Controller
  {
    /// <summary>
    /// <#= MethodName #>
    /// </summary>
    /// <param name="request">入力リクエスト</param>
    /// <returns>結果JSON</returns>
    [HttpPost("<#= MethodName.ToLower() #>")]
    public <#= GetMethodKeyword() #> IActionResult <#= MethodName #>(<#= MethodName #>Request request)
    {
      // システムエラーチェック
      if (systenErrorResult is IActionResult) return systenErrorResult;

      // 入力チェック
      if (!request.Validate())
      {
        logger.LogError("Pram[{0}]が未設定", request.ValidateNGPropertyName);
        return BadRequest();
      }

      var status = <#= MethodName #>Response.Results.OK;
      var message = string.Empty;
      <#= MethodName #>Response.<#= MethodName #>ResponseParam resultParam = null;

      var transaction = new <#= BaseName #>Transaction(repository, logger);
      resultParam = transaction.<#= MethodName #>(request);

      // TODO resultParamのエラー条件を実装してください。(本コメントは削除してください)
      if (false)
      {
        status = <#= MethodName #>Response.Results.NG;

       // TODO エラーメッセージを設定してください。(本コメントは削除してください)
        message = "メッセージ";
      }

      return Json(new <#= MethodName #>Response(status, message, resultParam));
    }
  }
}