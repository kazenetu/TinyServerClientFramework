<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using DataTransferObjects.Request.<#= BaseName #>;
using DataTransferObjects.Tables;
using Microsoft.Extensions.Logging;
using System;
using System.Text;
using WebAPI.Repositories;
using WebAPIFramework.BaseClasses;
using WebAPIFramework.Interfaces;

namespace WebAPI.Transactions.<#= BaseName #>
{
  public partial class <#= BaseName #>Transaction : TransactionBase
  {
    /// <summary>
    /// <#= MethodName #>
    /// </summary>
    /// <param name="request">入力リクエスト</param>
    /// <returns>処理結果</returns>
    public bool <#= MethodName #>(<#= MethodName #>Request request)
    {
      var result = false;

      // トランザクション設定
      repository.BeginTransaction();

      try
      {
        // 登録情報を設定する
        // TODO 登録情報saveDataにテーブルDTO(またはカスタマイズしたテーブルDTO)をnewして設定してください。(本コメントは削除してください)
        var saveData = new DummyTable();


        // <#= BaseName #>Repositoryのインスタンスを取得
        var <#= BaseName.ToLower() #>Repository = repository.Cast<<#= BaseName #>Repository>();

        // <#= BaseName #>Repository経由でSQLを発行
        var <#= BaseName.ToLower() #>Result = <#= BaseName.ToLower() #>Repository.<#= MethodName #>(saveData);

        // 発行結果を確認
        if(<#= BaseName.ToLower() #>Result)
        {
          // コミット
          repository.Commit();

          // 戻り値を完了に設定
          result = true;
        }
        else{
          // ロールバック
          repository.Rollback();
        }
      }
      catch (Exception ex)
      {
        // 一意制約違反などの場合はログ出力
        logger.LogError($"{nameof(<#= BaseName #>Transaction)}.{nameof(<#= MethodName #>)}:\"{ex.Message}\"");

        // ロールバック
        repository.Rollback();
      }

      return result;
    }
  }
}
