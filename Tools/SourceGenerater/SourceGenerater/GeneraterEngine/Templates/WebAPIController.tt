<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
using Microsoft.AspNetCore.Mvc;
using Microsoft.Extensions.Logging;
using System;
using WebAPIFramework.BaseClasses;
using WebAPIFramework.Interfaces;
<#
  var superClassName = GetSuperClassName();

  string GetSuperClassName(){
    var result = "ControllerWithRepositoryBase";
    var reg =  new System.Text.RegularExpressions.Regex(@"[^0-9]");
    var nowVersion = reg.Replace(WebAPIVersion, string.Empty);
    var beforeVersion = int.Parse(nowVersion) - 1;
    if (beforeVersion >= 1)
    {
      var targetFile = System.IO.Path.GetFullPath(System.IO.Path.Combine(BasePath,CreateFileName));
      targetFile = targetFile.Replace(WebAPIVersion.ToUpper(),$"V{beforeVersion}");
      if(System.IO.File.Exists(targetFile))
      {
        result = $"WebAPI.Controllers.V{beforeVersion}.{BaseName}Controller";
      }
    }
    return result;
  }
#>

namespace WebAPI.Controllers.<#= WebAPIVersion.ToUpper() #>
{
  [ApiExplorerSettings(GroupName ="<#= WebAPIVersion #>")]
  [Route("api/<#= WebAPIVersion #>/<#= BaseName.ToLower() #>")]
  public partial class <#= BaseName #>Controller : <#= superClassName #>
  {
    /// <summary>
    /// コンストラクタ
    /// </summary>
    /// <param name="repository">DIで取得するRepositoryBase用インターフェース</param>
    /// <param name="logger">ロガーインスタンス</param>
    public <#= BaseName #>Controller(IRepositoryBase repository, ILogger<<#= BaseName #>Controller> logger) : base(repository, logger)
    {
    }
  }
}