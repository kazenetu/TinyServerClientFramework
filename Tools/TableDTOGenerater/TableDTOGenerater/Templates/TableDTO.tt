<#@ template language="C#" #>
<#@ assembly name="System.Core" #>
<#@ import namespace="System.Linq" #>
<#@ import namespace="System.Text" #>
<#@ import namespace="System.Collections.Generic" #>
<#= "using DataTransferObjects.BaseClasses;" #>
<#= "using System;" #>
<#= "using System.Collections.Generic;" #>
<#= "using System.Reflection;" #>

namespace DataTransferObjects.Tables
{
  /// <summary>
  /// <#= getTableName().Trim() #>
  /// </summary>
<# 
var tableRemarks = getTableRemarks();
if(tableRemarks.Any())
{
#>
  /// <remarks>
<# 
  foreach(var tableRemark in tableRemarks)
  {
#>
  /// <#= tableRemark.Trim() #>
<# 
  }
#>
  /// </remarks>
<# 
}
#>
  public class <#= Table.TableName #> : TableBase
  {
    /// <summary>
    /// DBカラム名とプロパティのコレクション取得
    /// </summary>
    /// <returns>DBカラム名とプロパティのコレクション</returns>
    public override Dictionary<string, PropertyInfo> GetDBComlunProperyColection()
    {
      var result = new Dictionary<string, PropertyInfo>();

      var classType = this.GetType();
<# 
foreach(var column in Table.Columns)
{
#>
      result.Add("<#= column.ColumnOriginalName.ToUpper() #>", classType.GetProperty("<#= column.ColumnName #>"));
<# 
}
#>
      return result;
    }

<# 
foreach(var column in Table.Columns)
{
#>
    /// <summary>
    /// <#= getColumnName(column.ColumnLogicalName).Trim() #>
    /// </summary>
<# 
  var columnRemarks = getColumnRemarks(column.ColumnLogicalName);
  if(columnRemarks.Any())
  {
#>
    /// <remarks>
<# 
    foreach(var columnRemark in columnRemarks)
    {
#>
    /// <#= columnRemark.Trim() #>
<# 
    }
#>
    /// </remarks>
<# 
  }
#>
    public <#= column.GetColumnTypeName() #> <#= column.ColumnName #> { set; get; }

<# 
}
#>
  }
}
